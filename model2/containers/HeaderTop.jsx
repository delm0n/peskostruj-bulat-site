import React, { useState } from "react";
import { Link, animateScroll as scroll } from "react-scroll";
import { Transition } from "react-transition-group";
import { openCall } from "../store/modalsReducer.js";
import { useDispatch } from "react-redux";
function HeaderTop({ classItem, links, phone, phoneLink }) {
  const dispatch = useDispatch();
  const [burger, setBurger] = useState(false);
  return (
    <div className={`${classItem} header-top`}>
      <div className="content-container">
        <div className="header-top__row">
          <div className="header-top__logo">
            <span className="header-top__logo-name">
              <svg
                width="166"
                height="49"
                viewBox="0 0 166 49"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g id="Group 1171275085">
                  <g id="Group 1171275084">
                    <g id="logo">
                      <path
                        id="Vector"
                        d="M0 0.857614H18.482C20.1338 0.857614 21.1957 0.817053 21.6679 0.734959C22.1565 0.670062 22.4176 0.563631 22.4516 0.416314C22.5021 0.285871 22.717 0.183659 23.0963 0.11C23.4756 0.0366668 24.4742 0 26.0924 0C26.6317 0 27.0531 0.179765 27.3564 0.53897C27.6599 0.898499 27.8116 1.37225 27.8116 1.96021C27.8116 2.17275 27.765 2.41384 27.6726 2.68317C27.5797 2.95281 27.4406 3.30034 27.2553 3.72476C27.0697 4.14984 26.9268 4.51748 26.8255 4.82769C26.3535 6.0205 26.0584 7.22109 25.9407 8.43012C25.8225 9.62293 25.6834 10.4682 25.5234 10.9666C25.3631 11.465 24.9712 11.7139 24.3479 11.7139C23.8251 11.7139 23.4713 11.5588 23.286 11.2483C23.1002 10.9381 22.898 10.3907 22.679 9.60638C22.1395 7.67894 21.4948 6.22882 20.7449 5.25666C19.9947 4.2845 19.2153 3.65987 18.4062 3.38178C17.5972 3.10402 16.6617 2.96514 15.5998 2.96514H14.285H12.3383V15.5613C13.4842 16.6237 15.1783 17.5508 17.4201 18.3428C19.6617 19.1355 21.7097 19.5314 23.564 19.5314C23.9009 19.5314 24.609 19.499 25.6878 19.4334C26.9181 19.4334 27.7776 19.6378 28.2667 20.046C28.7554 20.4549 29 21.3368 29 22.6929V32.4709C29 33.3697 28.9407 34.056 28.8229 34.5294C28.7049 34.987 28.4098 35.3468 27.9381 35.6077C27.483 35.8692 26.7497 36 25.7383 36H0V33.8925H4.29812V2.96514H0V0.857614ZM12.3383 33.8925H18.7097C19.5693 33.8925 20.1674 33.6803 20.5047 33.2552C20.8082 32.8304 20.9598 31.9238 20.9598 30.535V24.8494C20.9598 24.0982 20.846 23.5505 20.6185 23.2075C20.391 22.8645 19.7628 22.4232 18.7349 21.8842C16.9312 20.9205 15.6251 20.1771 14.8159 19.6541C14.007 19.1151 13.1809 18.3882 12.3383 17.4729V33.8925Z"
                        fill="#5F7DCB"
                      />
                      <path
                        id="Vector_2"
                        d="M52.6004 36.0237H49.982C49.85 37.6323 49.7679 38.9293 49.735 39.9142V42.1795C49.7679 43.9192 49.9655 45.6513 50.3278 47.3747V48.6306L45.6101 49C45.6101 45.9138 45.8485 42.6799 46.3263 39.2983C46.4086 38.5758 46.5402 37.4843 46.7216 36.0237H42.1273L34.0748 2.83157H32V0.714005H45.6101V2.83157H42.1273L48.4505 29.7202C50.7231 19.1653 52.6084 11.5154 54.1071 6.77131C54.5351 5.47469 54.9797 4.35804 55.4408 3.42266C55.9017 2.48696 56.5605 1.68264 57.4169 1.00939C58.273 0.336463 59.3436 0 60.6279 0C61.3197 0 62.151 0.13139 63.1227 0.393844C64.0942 0.656624 64.7199 1.00124 65 1.42801C64.9339 1.87141 64.7858 2.37219 64.5554 2.93003C64.3084 3.43896 64.1436 4.01343 64.0614 4.65375C63.9788 5.29375 63.9379 6.51701 63.9379 8.32256H63.1721C62.9746 8.2241 62.8344 8.15857 62.7523 8.12564C62.6863 8.09271 62.5214 8.01088 62.2583 7.87916C61.303 7.37056 60.6114 7.11593 60.1835 7.11593C58.9645 7.11593 57.8862 7.82211 56.9476 9.23349C55.9924 10.6289 55.1854 12.3526 54.5269 14.4043C53.8847 16.4567 53.329 18.6316 52.8597 20.9295C52.3904 23.228 52.0156 25.0502 51.7358 26.396C51.011 29.8598 50.4595 32.3633 50.0809 33.9061H52.6004V36.0237Z"
                        fill="#5F7DCB"
                      />
                      <path
                        id="Vector_3"
                        d="M80.0943 34.3068H83.3873C82.5123 31.6876 81.7406 29.0154 81.0722 26.2889C80.4035 23.563 79.8546 21.1457 79.4256 19.0371C78.9961 16.9286 78.6001 14.8613 78.2369 12.8352C77.9066 11.0561 77.6177 9.65624 77.3703 8.63486C76.4625 9.68928 75.4967 11.2129 74.4735 13.2059C71.8491 18.0488 70.5369 22.1095 70.5369 25.3869C70.5369 26.952 70.5946 28.0925 70.7099 28.8093C70.8253 29.5258 70.9698 29.9789 71.1432 30.168C71.3166 30.3577 71.5435 30.4523 71.8242 30.4523H72.0225H72.1216C72.5173 30.4523 72.8185 30.7821 73.0249 31.4406C73.2313 32.0995 73.3346 33.5246 73.3346 35.7153C73.3346 36.2093 73.1035 36.5714 72.6412 36.8024C72.3277 36.9339 71.9559 37 71.5269 37C71.1307 37 70.5613 36.9339 69.8186 36.8024C69.505 36.769 69.0427 36.753 68.4321 36.753C67.722 36.753 67.1858 36.769 66.8225 36.8024C65.8651 36.8024 65.1802 36.6869 64.7674 36.4563C64.3384 36.2093 64.0825 35.7238 64 34.9985V33.2442C64.0658 32.0089 64.2349 30.7821 64.5076 29.5627C64.7797 28.3441 65.242 26.9275 65.8942 25.313C66.5461 23.6988 67.5075 21.6645 68.7787 19.2099C69.7028 17.4311 70.4827 15.9239 71.1184 14.6882C71.7538 13.4529 72.088 12.8025 72.1213 12.7364C73.1447 10.8752 74.003 9.23617 74.6964 7.81958C75.3896 6.40299 75.7364 5.25827 75.7364 4.38509C75.7364 3.84136 75.592 3.49555 75.3031 3.34735C75.0144 3.19915 74.5891 3.12488 74.0281 3.12488H70.4873L70.5121 1H87.2498V3.12488H84.1548C84.6991 7.24313 85.5495 11.843 86.7051 16.9244C87.8604 22.0064 89.0741 26.6311 90.3452 30.7981C90.6916 31.9019 91.0135 33.0712 91.3108 34.3068H95V36.4317H80.0943V34.3068Z"
                        fill="#5F7DCB"
                      />
                      <path
                        id="Vector_4"
                        d="M109.596 2.13268H105.551L105.577 0H121.885V2.13268H117.738L127.39 34.1482H131V36.2809H115.28V34.1482H119.248L115.331 20.9798C114.973 22.6662 114.397 24.4603 113.603 26.3612C112.81 28.2627 111.862 30.0152 110.761 31.6185C109.66 33.2222 108.436 34.5202 107.087 35.5119C105.739 36.5039 104.339 37 102.889 37C101.267 37 99.8804 36.4917 98.7282 35.4748C97.5763 34.4582 97 32.933 97 30.8994C97 29.0977 97.4095 27.1138 98.2289 24.9476C99.0482 22.7821 100.106 20.6077 101.404 18.4255C102.684 16.2271 104.177 13.8794 105.884 11.3825C105.986 11.2338 106.507 10.4651 107.446 9.07646C108.401 7.70426 109.024 6.66271 109.315 5.95181C109.605 5.24092 109.75 4.48044 109.75 3.67005C109.75 3.19098 109.699 2.67809 109.596 2.13268ZM113.795 16.169L111.44 8.08449C109.477 10.713 107.804 13.2673 106.422 15.7474C105.414 17.4831 104.587 19.0914 103.938 20.5706C103.289 22.0505 102.871 23.6253 102.684 25.2947V26.6341C102.956 28.2874 103.955 29.1138 105.679 29.1138C106.994 29.1138 108.235 28.3576 109.404 26.8449C110.573 25.3321 111.542 23.5508 112.31 21.5005C113.095 19.4509 113.59 17.6735 113.795 16.169Z"
                        fill="#5F7DCB"
                      />
                      <path
                        id="Vector_5"
                        d="M144.158 33.8838V2.82971H142.024H140.885C139.947 2.82971 139.2 2.96916 138.642 3.24805C138.085 3.52728 137.555 4.19976 137.054 5.26583C136.553 6.31593 136.028 7.95641 135.479 10.1873C135.204 11.2045 134.99 11.8812 134.836 12.2174C134.683 12.5537 134.347 12.7218 133.83 12.7218C133.248 12.7218 132.873 12.5126 132.703 12.0943C132.533 11.6759 132.432 11.1061 132.4 10.3841C132.352 9.00619 132.052 7.54621 131.503 6.00413C131.374 5.62683 131.091 4.94197 130.654 3.94921C130.218 2.9571 130 2.28038 130 1.91938C130 1.42707 130.186 0.984288 130.558 0.590378C130.929 0.196793 131.479 0 132.206 0C132.432 0 132.885 0.0821055 133.564 0.245991C134.242 0.393585 134.965 0.516743 135.733 0.61514C136.501 0.713536 137.539 0.762734 138.848 0.762734C139.107 0.762734 139.422 0.762734 139.794 0.762734C140.149 0.730152 140.432 0.713536 140.642 0.713536H155.382C155.592 0.713536 155.883 0.730152 156.255 0.762734C156.61 0.762734 156.917 0.762734 157.176 0.762734C158.469 0.762734 159.507 0.713536 160.291 0.61514C161.075 0.516743 161.806 0.393585 162.485 0.245991C163.147 0.0821055 163.592 0 163.818 0C164.546 0 165.091 0.196793 165.455 0.590378C165.818 0.984288 166 1.42707 166 1.91938C166 2.31296 165.794 2.97339 165.382 3.90001C164.97 4.82696 164.683 5.52844 164.521 6.00413C163.94 7.57879 163.624 9.0391 163.576 10.3841C163.576 11.9428 163.115 12.7218 162.194 12.7218C161.79 12.7218 161.487 12.5863 161.285 12.3158C161.083 12.0451 160.933 11.7336 160.837 11.3807C160.74 11.0282 160.497 10.0807 160.109 8.53864C159.64 6.79977 159.131 5.52029 158.582 4.69989C158.048 3.8961 157.438 3.38327 156.752 3.16204C156.064 2.94048 155.147 2.82971 154 2.82971H151.867V33.8838H155.988V36H140.036V33.8838H144.158Z"
                        fill="#5F7DCB"
                      />
                    </g>
                  </g>
                </g>
              </svg>
            </span>
            <span className="header-top__logo-border"></span>
            <span className="header-top__logo-info">
              Официальный сайт производителя
            </span>
          </div>
          <Transition in={burger} timeout={0}>
            {(state) => (
              <nav className={`header-top__nav ${state}`}>
                <ul className="header-top__list">
                  {links.map((item) => (
                    <li key={item.name} className="header-top__item">
                      <Link
                        to={item.to}
                        smooth={"easeInOutQuad"}
                        offset={item.offset}
                        duration={item.duration}
                        className="header-top__link"
                      >
                        {item.name}
                      </Link>
                    </li>
                  ))}
                </ul>
                <div className="header-top__feedback">
                  <a className="header-top__phone" href={`tel:${phoneLink}`}>
                    {phone}
                  </a>
                  <button
                    onClick={() => dispatch(openCall(true))}
                    className="header-top__btn-call"
                  >
                    Заказать звонок
                  </button>
                </div>
              </nav>
            )}
          </Transition>
          <div
            onClick={() => setBurger(!burger)}
            className="header-top__burger"
          >
            <span
              className={`header-top__burger-icon ${burger ? "active" : ""}`}
            >
              <span></span>
              <span></span>
              <span></span>
              <span></span>
            </span>
          </div>
        </div>
      </div>
    </div>
  );
}

export default HeaderTop;
